{"ast":null,"code":"var _jsxFileName = \"/workspaces/Trend-Catcher/Trend-Catcher/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [trends, setTrends] = useState([]);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/api/trends`).then(res => res.json()).then(data => setTrends(data.trends)).catch(err => console.error(\"Failed to fetch trends:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trending Hashtags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: trends.map((trend, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [trend.hashtag, \" \\u2013 \", trend.views.toLocaleString(), \" views\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"kLUnhehmoevJwfCWQUk2udGvkuc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","_s","trends","setTrends","fetch","process","env","REACT_APP_API_URL","then","res","json","data","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","trend","index","hashtag","views","toLocaleString","_c","$RefreshReg$"],"sources":["/workspaces/Trend-Catcher/Trend-Catcher/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Dashboard() {\n  const [trends, setTrends] = useState([]);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/api/trends`)\n      .then((res) => res.json())\n      .then((data) => setTrends(data.trends))\n      .catch((err) => console.error(\"Failed to fetch trends:\", err));\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending Hashtags</h1>\n      <ul>\n        {trends.map((trend, index) => (\n          <li key={index}>\n            {trend.hashtag} â€“ {trend.views.toLocaleString()} views\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,aAAa,CAAC,CACjDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKR,SAAS,CAACQ,IAAI,CAACT,MAAM,CAAC,CAAC,CACtCU,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BrB,OAAA;MAAAiB,QAAA,EACGd,MAAM,CAACmB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBxB,OAAA;QAAAiB,QAAA,GACGM,KAAK,CAACE,OAAO,EAAC,UAAG,EAACF,KAAK,CAACG,KAAK,CAACC,cAAc,CAAC,CAAC,EAAC,QAClD;MAAA,GAFSH,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnB,EAAA,CAtBQD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAwBlB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}